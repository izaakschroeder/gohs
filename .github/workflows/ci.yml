name: Continuous integration

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

defaults:
  run:
    shell: bash

jobs:
  vectorscan:
    strategy:
      matrix:
        include:
          - os: linux
            arch: arm64
            runner: ubuntu-22.04
          - os: linux
            arch: amd64
            runner: ubuntu-22.04
          - os: darwin
            arch: arm64
            runner: ubuntu-22.04
          - os: darwin
            arch: amd64
            runner: ubuntu-22.04
          - os: windows
            arch: amd64
            runner: ubuntu-22.04
            
    runs-on: ${{ matrix.runner }}
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq cmake ragel libpcap-dev
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0-dev.75+5c9eb4081
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ./build
          key: ${{ matrix.os }}-${{ matrix.arch }}-build

      - name: Build
        run: |
          # Dumb hack for cmake + macOS cross target
          # We don't ever use this tool even though cmake
          # demands that it exist.
          sudo sh -c 'echo > /usr/bin/install_name_tool'
          sudo chmod +x /usr/bin/install_name_tool
          ./build.sh
      
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: vectorscan-${{ matrix.os }}-${{ matrix.arch }}
          path: ./dist/**
        
  vectorscan-dist:
    runs-on: ubuntu-latest
    needs: vectorscan
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: vectorscan
          delete-merged: true
          pattern: vectorscan-*

  gohs:
    needs: vectorscan-dist
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            runner: ubuntu-22.04
          - os: darwin
            arch: arm64
            runner: macos-14
          - os: darwin
            arch: amd64
            runner: macos-13
          - os: windows
            arch: amd64
            runner: windows-2022
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: vectorscan
          path: ./dist
      - name: Install Golang 1.21.1
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.1
      - name: Test
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

  golangci:
    name: lint
    runs-on: ubuntu-22.04
    steps:
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev libpcap-dev

      - uses: actions/setup-go@v3

      - uses: actions/checkout@v3

      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     version: latest
      #     working-directory: hyperscan
